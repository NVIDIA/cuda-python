# SPDX-FileCopyrightText: Copyright (c) 2023-2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-NVIDIA-SOFTWARE-LICENSE
[build-system]
requires = ["setuptools>=77.0.0", "cython>=3.1,<3.2", "pyclibrary>=0.1.7"]
build-backend = "setuptools.build_meta"

[project]
name = "cuda-bindings"
description = "Python bindings for CUDA"
authors = [{name = "NVIDIA Corporation", email = "cuda-python-conduct@nvidia.com"},]
license = "LicenseRef-NVIDIA-SOFTWARE-LICENSE"
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Environment :: GPU :: NVIDIA CUDA",
]
dynamic = [
    "version",
    "readme",
]
dependencies = [
  "cuda-pathfinder ~=1.1",
]

[project.optional-dependencies]
all = [
    "cuda-toolkit[nvrtc,nvjitlink,nvvm]==13.*",
    "cuda-toolkit[cufile]==13.*; sys_platform == 'linux'",
]

[dependency-groups]
test = [
    "numpy>=1.21.1",
    "pytest>=6.2.4",
    "pytest-benchmark>=3.4.1",
]

[project.urls]
Repository = "https://github.com/NVIDIA/cuda-python"
Documentation = "https://nvidia.github.io/cuda-python/"

[tool.setuptools.packages.find]
include = ["cuda*"]

[tool.setuptools.dynamic]
version = { attr = "cuda.bindings._version.__version__" }
readme = { file = ["DESCRIPTION.rst"], content-type = "text/x-rst" }

[tool.cibuildwheel]
skip = "*-musllinux_*"
enable = "cpython-freethreading"
build-verbosity = 1

[tool.cibuildwheel.linux]
archs = "native"

[tool.cibuildwheel.windows]
archs = "AMD64"
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair --namespace-pkg cuda -w {dest_dir} {wheel}"

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "win-64"]

[tool.pixi.pypi-dependencies]
cuda-bindings = { path = ".", editable = true }

[tool.pixi.environments]
cu13 = { features = ["all", "test"], solve-group = "cu13" }

[tool.pixi.feature.all.dependencies]
libnvjitlink = "*"

[tool.pixi.build-dependencies]
cuda-nvrtc-dev = "*"
cuda-profiler-api = "*"
cuda-nvvm = "*"
gxx = "*"

[tool.pixi.target.linux.build-dependencies]
libcufile-dev = "*"

[tool.pixi.target.linux-64.build-dependencies]
cuda-crt-dev_linux-64 = "*"

[tool.pixi.target.linux-aarch64.build-dependencies]
cuda-crt-dev_linux-aarch64 = "*"

[tool.pixi.target.win-64.build-dependencies]
cuda-crt-dev_win-64 = "*"

[tool.pixi.target.linux.activation.env]
CUDA_HOME = "$CONDA_PREFIX/targets/x86_64-linux"

[tool.pixi.target.win.activation.env]
CUDA_HOME = '%CONDA_PREFIX%\Library'
