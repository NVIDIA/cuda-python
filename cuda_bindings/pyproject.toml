# Copyright 2023-2024 NVIDIA Corporation.  All rights reserved.
# SPDX-License-Identifier: LicenseRef-NVIDIA-SOFTWARE-LICENSE

[build-system]
requires = ["setuptools>=77.0.0", "cython", "pyclibrary"]
build-backend = "setuptools.build_meta"

[project]
name = "cuda-bindings"
description = "Python bindings for CUDA"
authors = [{name = "NVIDIA Corporation", email = "cuda-python-conduct@nvidia.com"},]
license = "LicenseRef-NVIDIA-SOFTWARE-LICENSE"
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Environment :: GPU :: NVIDIA CUDA",
]
dynamic = [
    "version",
    "readme",
]
dependencies = [
  "pywin32; sys_platform == 'win32'",
]

[project.optional-dependencies]
all = [
    "nvidia-cuda-nvcc-cu12",
    "nvidia-cuda-nvrtc-cu12",
    "nvidia-nvjitlink-cu12>=12.3",
]

[project.urls]
Repository = "https://github.com/NVIDIA/cuda-python"
Documentation = "https://nvidia.github.io/cuda-python/"

[tool.setuptools.packages.find]
include = ["cuda*"]

[tool.setuptools.dynamic]
version = { attr = "cuda.bindings._version.__version__" }
readme = { file = ["DESCRIPTION.rst"], content-type = "text/x-rst" }

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

exclude = ["cuda/bindings/_version.py"]

[tool.ruff.lint]
select = [
    # pycodestyle Error
    "E",
    # Pyflakes
    "F",
    # pycodestyle Warning
    "W",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore = [
    "UP006", 
    "UP007", 
    "E741", # ambiguous variable name such as I
    "B007", # rename unsued loop variable to _name 
    "UP035" # UP006, UP007, UP035 complain about deprecated Typing.<type> use, but disregard backward compatibility of python version
]

exclude = ["cuda/bindings/_version.py"]

[tool.ruff.lint.per-file-ignores]
"setup.py" = ["F401"]
"__init__.py" = ["F401"]

"examples/**/*" = [
  "E722",
  "E501" # line too long
  ]

"tests/**/*" = [
  "E722", 
  "UP022",
  "E402", # module level import not at top of file
  "F841"] # F841 complains about unused variables, but some assignments have side-effects that could be useful for tests (func calls for example)

"benchmarks/**/*" = [
  "E722", 
  "UP022",
  "E402", # module level import not at top of file
  "F841"] # F841 complains about unused variables, but some assignments have side-effects that could be useful for tests (func calls for example)
