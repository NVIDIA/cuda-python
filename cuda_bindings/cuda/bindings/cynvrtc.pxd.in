# Copyright 2021-2025 NVIDIA Corporation.  All rights reserved.
#
# Please refer to the NVIDIA end user license agreement (EULA) associated
# with this source code for terms and conditions that govern your use of
# this software. Any use, reproduction, disclosure, or distribution of
# this software and related documentation outside the terms of the EULA
# is strictly prohibited.
#
# This code was automatically generated with version 12.9.0. Do not modify it directly.

from libc.stdint cimport uint32_t, uint64_t

cdef extern from "nvrtc.h":

    ctypedef enum nvrtcResult:
        NVRTC_SUCCESS = 0
        NVRTC_ERROR_OUT_OF_MEMORY = 1
        NVRTC_ERROR_PROGRAM_CREATION_FAILURE = 2
        NVRTC_ERROR_INVALID_INPUT = 3
        NVRTC_ERROR_INVALID_PROGRAM = 4
        NVRTC_ERROR_INVALID_OPTION = 5
        NVRTC_ERROR_COMPILATION = 6
        NVRTC_ERROR_BUILTIN_OPERATION_FAILURE = 7
        NVRTC_ERROR_NO_NAME_EXPRESSIONS_AFTER_COMPILATION = 8
        NVRTC_ERROR_NO_LOWERED_NAMES_BEFORE_COMPILATION = 9
        NVRTC_ERROR_NAME_EXPRESSION_NOT_VALID = 10
        NVRTC_ERROR_INTERNAL_ERROR = 11
        NVRTC_ERROR_TIME_FILE_WRITE_FAILED = 12
        NVRTC_ERROR_NO_PCH_CREATE_ATTEMPTED = 13
        NVRTC_ERROR_PCH_CREATE_HEAP_EXHAUSTED = 14
        NVRTC_ERROR_PCH_CREATE = 15
        NVRTC_ERROR_CANCELLED = 16

    cdef struct _nvrtcProgram:
        pass
    ctypedef _nvrtcProgram* nvrtcProgram

{{if 'nvrtcGetErrorString' in found_functions}}

cdef const char* nvrtcGetErrorString(nvrtcResult result) except ?NULL nogil
{{endif}}

{{if 'nvrtcVersion' in found_functions}}

cdef nvrtcResult nvrtcVersion(int* major, int* minor) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetNumSupportedArchs' in found_functions}}

cdef nvrtcResult nvrtcGetNumSupportedArchs(int* numArchs) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetSupportedArchs' in found_functions}}

cdef nvrtcResult nvrtcGetSupportedArchs(int* supportedArchs) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcCreateProgram' in found_functions}}

cdef nvrtcResult nvrtcCreateProgram(nvrtcProgram* prog, const char* src, const char* name, int numHeaders, const char** headers, const char** includeNames) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcDestroyProgram' in found_functions}}

cdef nvrtcResult nvrtcDestroyProgram(nvrtcProgram* prog) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcCompileProgram' in found_functions}}

cdef nvrtcResult nvrtcCompileProgram(nvrtcProgram prog, int numOptions, const char** options) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetPTXSize' in found_functions}}

cdef nvrtcResult nvrtcGetPTXSize(nvrtcProgram prog, size_t* ptxSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetPTX' in found_functions}}

cdef nvrtcResult nvrtcGetPTX(nvrtcProgram prog, char* ptx) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetCUBINSize' in found_functions}}

cdef nvrtcResult nvrtcGetCUBINSize(nvrtcProgram prog, size_t* cubinSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetCUBIN' in found_functions}}

cdef nvrtcResult nvrtcGetCUBIN(nvrtcProgram prog, char* cubin) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetNVVMSize' in found_functions}}

cdef nvrtcResult nvrtcGetNVVMSize(nvrtcProgram prog, size_t* nvvmSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetNVVM' in found_functions}}

cdef nvrtcResult nvrtcGetNVVM(nvrtcProgram prog, char* nvvm) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetLTOIRSize' in found_functions}}

cdef nvrtcResult nvrtcGetLTOIRSize(nvrtcProgram prog, size_t* LTOIRSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetLTOIR' in found_functions}}

cdef nvrtcResult nvrtcGetLTOIR(nvrtcProgram prog, char* LTOIR) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetOptiXIRSize' in found_functions}}

cdef nvrtcResult nvrtcGetOptiXIRSize(nvrtcProgram prog, size_t* optixirSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetOptiXIR' in found_functions}}

cdef nvrtcResult nvrtcGetOptiXIR(nvrtcProgram prog, char* optixir) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetProgramLogSize' in found_functions}}

cdef nvrtcResult nvrtcGetProgramLogSize(nvrtcProgram prog, size_t* logSizeRet) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetProgramLog' in found_functions}}

cdef nvrtcResult nvrtcGetProgramLog(nvrtcProgram prog, char* log) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcAddNameExpression' in found_functions}}

cdef nvrtcResult nvrtcAddNameExpression(nvrtcProgram prog, const char* name_expression) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetLoweredName' in found_functions}}

cdef nvrtcResult nvrtcGetLoweredName(nvrtcProgram prog, const char* name_expression, const char** lowered_name) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetPCHHeapSize' in found_functions}}

cdef nvrtcResult nvrtcGetPCHHeapSize(size_t* ret) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcSetPCHHeapSize' in found_functions}}

cdef nvrtcResult nvrtcSetPCHHeapSize(size_t size) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetPCHCreateStatus' in found_functions}}

cdef nvrtcResult nvrtcGetPCHCreateStatus(nvrtcProgram prog) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcGetPCHHeapSizeRequired' in found_functions}}

cdef nvrtcResult nvrtcGetPCHHeapSizeRequired(nvrtcProgram prog, size_t* size) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

{{if 'nvrtcSetFlowCallback' in found_functions}}

cdef nvrtcResult nvrtcSetFlowCallback(nvrtcProgram prog, void* callback, void* payload) except ?NVRTC_ERROR_INVALID_INPUT nogil
{{endif}}

