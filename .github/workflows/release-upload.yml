# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

name: "CI: Upload git archive"

on:
  workflow_call:
    inputs:
      git-tag:
        type: string
        required: true

concurrency:
  # Concurrency group that uses the workflow name and PR number if available
  # or commit SHA as a fallback. If a new build is triggered under that
  # concurrency group while a previous build is running it will be canceled.
  # Repeated pushes to a PR will cancel all previous builds, while multiple
  # merges to main will not cancel.
  group: ${{ github.workflow }}-${{ github.ref_name || github.sha }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  # create source archive and upload it to the published release
  # URL to the archive: https://github.com/NVIDIA/<repo>/releases/download/<tag>/<repo>-<tag>.tar.gz
  upload:
    if: ${{ !github.event.repository.fork }}
    runs-on: ubuntu-latest
    env:
      ARCHIVE_NAME: ${{ github.event.repository.name }}-${{ inputs.git-tag }}
    steps:
      - name: Checkout Source
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ inputs.git-tag }}

      - name: Create Release Directory
        run: mkdir -p release

      - name: Archive Source
        run: >
          git archive
          --format=tar.gz
          --prefix="${{ env.ARCHIVE_NAME }}/"
          --output="release/${{ env.ARCHIVE_NAME }}.tar.gz"
          ${{ inputs.git-tag }}

      - name: Compute Checksum
        run: >
          sha256sum "release/${{ env.ARCHIVE_NAME }}.tar.gz"
          | awk '{print $1}'
          > "release/${{ env.ARCHIVE_NAME }}.tar.gz.sha256sum"

      - name: Upload Archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: >
          gh release upload
          --clobber "${{ inputs.git-tag }}"
          --repo "${{ github.repository }}"
          release/*
