# Copyright (c) 2024, NVIDIA CORPORATION & AFFILIATES. ALL RIGHTS RESERVED.
#
# SPDX-License-Identifier: LicenseRef-NVIDIA-SOFTWARE-LICENSE

[build-system]
requires = ["setuptools", "Cython>=3.0"]
build-backend = "setuptools.build_meta"


[project]
name = "cuda-core"
dynamic = [
    "version",
    "readme",
]
requires-python = '>=3.9'
description = "cuda.core: (experimental) pythonic CUDA module"
authors = [
    { name = "NVIDIA Corporation" }
]
license = {text = "NVIDIA Software License"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "License :: Other/Proprietary License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Environment :: GPU :: NVIDIA CUDA",
    "Environment :: GPU :: NVIDIA CUDA :: 11",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
]
dependencies = [
    "numpy",
    # TODO: change this once cuda-bindings is packaged, see NVIDIA/cuda-python#105
    "cuda-python <13",
]


[tool.setuptools.packages.find]
include = ["cuda.core*"]


[tool.setuptools.dynamic]
version = { attr = "cuda.core._version.__version__" }
readme = { file = ["README.md"], content-type = "text/markdown" }

[tool.ruff]
line-length = 120

[tool.ruff.format]
docstring-code-format = true

exclude = ["cuda/core/_version.py"]

[tool.ruff.lint]
select = [
    # pycodestyle Error
    "E",
    # Pyflakes
    "F",
    # pycodestyle Warning
    "W",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

ignore = [
    "UP006", 
    "UP007", 
    "E741", # ambiguous variable name such as I
    "B007", # rename unsued loop variable to _name 
    "UP035" # UP006, UP007, UP035 complain about deprecated Typing.<type> use, but disregard backward compatibility of python version
]

exclude = ["cuda/core/_version.py"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"setup.py" = ["F401"]
