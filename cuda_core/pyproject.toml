# SPDX-FileCopyrightText: Copyright (c) 2024-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
#
# SPDX-License-Identifier: Apache-2.0

[build-system]
requires = ["setuptools>=77.0.0", "Cython>=3.1"]
build-backend = "build_hooks"
backend-path = ["."]


[project]
name = "cuda-core"
dynamic = [
    "version",
    "readme",
]
requires-python = '>=3.9'
description = "cuda.core: (experimental) pythonic CUDA module"
authors = [
    { name = "NVIDIA Corporation" }
]
license = "Apache-2.0"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: End Users/Desktop",
    "Natural Language :: English",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Education",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: Implementation :: CPython",
    "Environment :: GPU :: NVIDIA CUDA",
    "Environment :: GPU :: NVIDIA CUDA :: 12",
    "Environment :: GPU :: NVIDIA CUDA :: 13",
]
dependencies = [
    "numpy",
]

[project.optional-dependencies]
cu12 = ["cuda-bindings[all]==12.*"]
cu13 = ["cuda-bindings[all]==13.*"]
# TODO: these should all be in development dependencies; optional dependencies
# are for features exposed to *users*, not a dumping ground for all tooling
# needed to build and test the project
test = ["cython>=3.1", "setuptools", "pytest>=6.2.4"]
test-cu12 = ["cuda-core[test]", "cupy-cuda12x; python_version < '3.14'", "cuda-toolkit[cudart]==12.*"]  # runtime headers needed by CuPy
test-cu13 = ["cuda-core[test]", "cupy-cuda13x; python_version < '3.14'", "cuda-toolkit[cudart]==13.*"]  # runtime headers needed by CuPy
# free threaded build, cupy doesn't support free-threaded builds yet, so avoid installing it for now
# TODO: cupy should support free threaded builds
test-cu13-ft = ["cuda-core[test]", "cuda-toolkit[cudart]==13.*"]

[project.urls]
homepage = "https://nvidia.github.io/cuda-python/"
documentation = "https://nvidia.github.io/cuda-python/cuda-core/"
repository = "https://github.com/NVIDIA/cuda-python/tree/main/cuda_core"
issues = "https://github.com/NVIDIA/cuda-python/issues/"

[tool.setuptools.packages.find]
include = ["cuda.core*"]

[tool.setuptools.package-data]
"cuda.core.experimental.include" = ["*.h", "*.hpp", "*.cuh"]

[tool.setuptools.dynamic]
version = { attr = "cuda.core._version.__version__" }
readme = { file = ["DESCRIPTION.rst"], content-type = "text/x-rst" }

[tool.cibuildwheel]
skip = "*-musllinux_*"
enable = "cpython-freethreading"
build-verbosity = 1

[tool.cibuildwheel.linux]
archs = "native"

[tool.cibuildwheel.windows]
archs = "AMD64"
before-build = "pip install delvewheel"
repair-wheel-command = "delvewheel repair --namespace-pkg cuda -w {dest_dir} {wheel}"
