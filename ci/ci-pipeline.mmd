```mermaid
flowchart TD
    %% Trigger Events
    subgraph TRIGGER["ðŸ”„ TRIGGER EVENTS"]
        T1["â€¢ Push to main branch<br/>â€¢ Push to pull-request/* branches"]
        T2["â€¢ Pull request<br/>â€¢ Manual workflow dispatch"]
        T1 --- T2
    end

    %% Build Stage
    subgraph BUILD["ðŸ”¨ BUILD STAGE"]
        subgraph BUILD_PLATFORMS["Parallel Platform Builds"]
            B1["linux-64<br/>(Self-hosted)"]
            B2["linux-aarch64<br/>(Self-hosted)"] 
            B3["win-64<br/>(GitHub-hosted)"]
        end
        BUILD_DETAILS["â€¢ Python versions: 3.9, 3.10, 3.11, 3.12, 3.13<br/>â€¢ CUDA version: 13.0.0 (build-time)<br/>â€¢ Components: cuda-core, cuda-bindings,<br/>  cuda-pathfinder, cuda-python"]
    end

    %% Artifact Storage
    subgraph ARTIFACTS["ðŸ“¦ ARTIFACT STORAGE"]
        subgraph GITHUB_ARTIFACTS["GitHub Artifacts"]
            GA1["â€¢ Wheel files (.whl)<br/>â€¢ Test artifacts<br/>â€¢ Documentation<br/>(30-day retention)"]
        end
        subgraph GITHUB_CACHE["GitHub Cache"]
            GC1["â€¢ Mini CTK cache"]
        end
    end

    %% Test Stage
    subgraph TEST["ðŸ§ª TEST STAGE"]
        subgraph TEST_PLATFORMS["Parallel Platform Tests"]
            TS1["linux-64<br/>(Self-hosted)"]
            TS2["linux-aarch64<br/>(Self-hosted)"]
            TS3["win-64<br/>(GitHub-hosted)"]
        end
        TEST_DETAILS["â€¢ Download wheels from artifacts<br/>â€¢ Test against multiple CUDA runtime versions<br/>â€¢ Run Python unit tests, Cython tests, examples"]
        ARTIFACT_FLOWS["Artifact Flows:<br/>â€¢ cuda-pathfinder: main â†’ backport<br/>â€¢ cuda-bindings: backport â†’ main"]
    end

    %% Release Pipeline
    subgraph RELEASE["ðŸš€ RELEASE PIPELINE"]
        subgraph RELEASE_STAGES["Sequential Release Steps"]
            R1["Validation<br/>â€¢ Artifact integrity<br/>â€¢ Git tag verification"]
            R2["Publishing<br/>â€¢ PyPI/TestPyPI<br/>â€¢ Component or all releases"]
            R3["Documentation<br/>â€¢ GitHub Pages<br/>â€¢ Release notes"]
            R1 --> R2 --> R3
        end
        RELEASE_DETAILS["â€¢ Manual workflow dispatch with run ID<br/>â€¢ Supports individual component or full releases"]
    end

    %% Main Flow
    TRIGGER --> BUILD
    BUILD --> ARTIFACTS
    ARTIFACTS --> TEST
    TEST --> RELEASE

    %% Artifact Flow Arrows (Cache Reuse)
    GITHUB_CACHE -.->|"mini CTK reuse"| BUILD
    
    %% Artifact Flow Arrows (Wheel Fetch)
    GITHUB_ARTIFACTS -.->|"wheel fetch"| RELEASE

    %% Styling
    classDef triggerStyle fill:#e8f4fd,stroke:#2196F3,stroke-width:2px,color:#1976D2
    classDef buildStyle fill:#f3e5f5,stroke:#9C27B0,stroke-width:2px,color:#7B1FA2
    classDef artifactStyle fill:#fff3e0,stroke:#FF9800,stroke-width:2px,color:#F57C00
    classDef testStyle fill:#e8f5e8,stroke:#4CAF50,stroke-width:2px,color:#388E3C
    classDef releaseStyle fill:#ffebee,stroke:#f44336,stroke-width:2px,color:#D32F2F

    class TRIGGER,T1,T2 triggerStyle
    class BUILD,BUILD_PLATFORMS,B1,B2,B3,BUILD_DETAILS buildStyle
    class ARTIFACTS,GITHUB_ARTIFACTS,GITHUB_CACHE,GA1,GC1 artifactStyle
    class TEST,TEST_PLATFORMS,TS1,TS2,TS3,TEST_DETAILS,ARTIFACT_FLOWS testStyle
    class RELEASE,RELEASE_STAGES,R1,R2,R3,RELEASE_DETAILS releaseStyle
```