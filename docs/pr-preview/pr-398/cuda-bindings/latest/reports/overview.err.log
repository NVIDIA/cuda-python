Traceback (most recent call last):
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/asyncio/base_events.py", line 686, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Initialize CUDA Driver API
checkCudaErrors(driver.cuInit(0))

# Retrieve handle for device 0
cuDevice = checkCudaErrors(driver.cuDeviceGet(0))

# Derive target architecture for device 0
major = checkCudaErrors(driver.cuDeviceGetAttribute(driver.CUdevice_attribute.CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR, cuDevice))
minor = checkCudaErrors(driver.cuDeviceGetAttribute(driver.CUdevice_attribute.CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR, cuDevice))
arch_arg = bytes(f'--gpu-architecture=compute_{major}{minor}', 'ascii')

# Create program
prog = checkCudaErrors(nvrtc.nvrtcCreateProgram(str.encode(saxpy), b"saxpy.cu", 0, [], []))

# Compile program
opts = [b"--fmad=false", arch_arg]
checkCudaErrors(nvrtc.nvrtcCompileProgram(prog, 2, opts))

# Get PTX from compilation
ptxSize = checkCudaErrors(nvrtc.nvrtcGetPTXSize(prog))
ptx = b" " * ptxSize
checkCudaErrors(nvrtc.nvrtcGetPTX(prog, ptx))
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[4], line 2[0m
[1;32m      1[0m [38;5;66;03m# Initialize CUDA Driver API[39;00m
[0;32m----> 2[0m checkCudaErrors([43mdriver[49m[38;5;241;43m.[39;49m[43mcuInit[49m[43m([49m[38;5;241;43m0[39;49m[43m)[49m)
[1;32m      4[0m [38;5;66;03m# Retrieve handle for device 0[39;00m
[1;32m      5[0m cuDevice [38;5;241m=[39m checkCudaErrors(driver[38;5;241m.[39mcuDeviceGet([38;5;241m0[39m))

File [0;32m~/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/cuda/bindings/driver.pyx:15991[0m, in [0;36mcuda.bindings.driver.cuInit[0;34m()[0m

File [0;32m~/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/cuda/bindings/cydriver.pyx:17[0m, in [0;36mcuda.bindings.cydriver.cuInit[0;34m()[0m

File [0;32m~/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/cuda/bindings/_bindings/cydriver.pyx:2684[0m, in [0;36mcuda.bindings._bindings.cydriver._cuInit[0;34m()[0m

File [0;32m~/miniconda3/envs/cuda-python-docs/lib/python3.12/site-packages/cuda/bindings/_bindings/cydriver.pyx:490[0m, in [0;36mcuda.bindings._bindings.cydriver.cuPythonInit[0;34m()[0m

[0;31mRuntimeError[0m: Failed to dlopen libcuda.so.1

